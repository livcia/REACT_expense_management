{"ast":null,"code":"var _jsxFileName = \"D:\\\\expense_management\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport ExpenseItem from './ExpenseItem';\nimport ExpensesFilter from './ExpensesFilter';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n  /*let filterInfoText = '2019, 2020, 2022, 2023'\r\n    if (filteredYear === '2020'){\r\n    filterInfoText = '2019, 2021, 2022, 2023'\r\n  }else if(filteredYear === '2021'){\r\n    filterInfoText = '2019, 2020, 2022, 2023'\r\n  }else if(filteredYear === '2022'){\r\n    filterInfoText = '2019, 2020, 2021, 2023'\r\n  }else{\r\n    filterInfoText = '2019, 2020, 2021, 2022'\r\n  }*/\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 25\n  }, this);\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseItem","ExpensesFilter","Card","React","useState","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","amount","id","className","selected","onChangeFilter","_c","$RefreshReg$"],"sources":["D:/expense_management/src/components/Expenses/Expenses.js"],"sourcesContent":["import ExpenseItem from './ExpenseItem';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\nimport React, { useState } from 'react';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n  /*let filterInfoText = '2019, 2020, 2022, 2023'\r\n\r\n  if (filteredYear === '2020'){\r\n    filterInfoText = '2019, 2021, 2022, 2023'\r\n  }else if(filteredYear === '2021'){\r\n    filterInfoText = '2019, 2020, 2022, 2023'\r\n  }else if(filteredYear === '2022'){\r\n    filterInfoText = '2019, 2020, 2021, 2023'\r\n  }else{\r\n    filterInfoText = '2019, 2020, 2021, 2022'\r\n  }*/\r\n\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear)\r\n  }\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear\r\n  });\r\n\r\n  let expensesContent = <p>No expenses found</p>\r\n\r\n  if (filteredExpenses.length > 0){\r\n    expensesContent = filteredExpenses.map(expense => \r\n      <ExpenseItem \r\n        key = {expense.id}\r\n        title = {expense.title} \r\n        amount = {expense.amount} \r\n        date = {expense.date}\r\n        />)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Card className=\"expenses\">\r\n    <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\r\n    {expensesContent}\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,gBAAgB;AACvB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EACxD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,MAAMQ,mBAAmB,GAAGC,YAAY,IAAI;IAC1CF,eAAe,CAACE,YAAY,CAAC;EAC/B,CAAC;EACD,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAACC,OAAO,IAAI;IACrD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,YAAY;EAC/D,CAAC,CAAC;EAEF,IAAIW,eAAe,gBAAGf,OAAA;IAAAgB,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE9C,IAAIZ,gBAAgB,CAACa,MAAM,GAAG,CAAC,EAAC;IAC9BN,eAAe,GAAGP,gBAAgB,CAACc,GAAG,CAACX,OAAO,iBAC5CX,OAAA,CAACN,WAAW;MAEV6B,KAAK,EAAIZ,OAAO,CAACY,KAAM;MACvBC,MAAM,EAAIb,OAAO,CAACa,MAAO;MACzBZ,IAAI,EAAID,OAAO,CAACC;IAAK,GAHdD,OAAO,CAACc,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CAAC,CAAC;EACT;EAEA,oBACEpB,OAAA;IAAAgB,QAAA,eACAhB,OAAA,CAACJ,IAAI;MAAC8B,SAAS,EAAC,UAAU;MAAAV,QAAA,gBAC1BhB,OAAA,CAACL,cAAc;QAACgC,QAAQ,EAAEvB,YAAa;QAACwB,cAAc,EAAEtB;MAAoB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAC7EL,eAAe;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAAjB,EAAA,CAzCKF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}